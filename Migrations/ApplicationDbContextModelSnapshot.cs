// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductInventory.Data;

#nullable disable

namespace ProductInventory.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProductInventory.Properties.Models.Product", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("char(36)");

                    b.Property<string>("HSNCODE")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsFavorate")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("TotalStock")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTimeOffset>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("decimalStock")
                        .HasColumnType("longtext");

                    b.Property<string>("productCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("productImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ProductInventory.Properties.Models.StockTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTimeOffset>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VariantCombination")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("StockTransaction");
                });

            modelBuilder.Entity("ProductInventory.Properties.Models.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("ProductInventory.Properties.Models.VariantOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("OptionValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("VariantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VariantId");

                    b.ToTable("VariantOptions");
                });

            modelBuilder.Entity("ProductInventory.Properties.Models.StockTransaction", b =>
                {
                    b.HasOne("ProductInventory.Properties.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("ProductInventory.Properties.Models.Variant", b =>
                {
                    b.HasOne("ProductInventory.Properties.Models.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProductInventory.Properties.Models.VariantOption", b =>
                {
                    b.HasOne("ProductInventory.Properties.Models.Variant", "Variant")
                        .WithMany("Options")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("ProductInventory.Properties.Models.Product", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("ProductInventory.Properties.Models.Variant", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
